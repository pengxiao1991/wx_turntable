function _invoke(n,e,i){win.androidJs?win.androidJs.doAndroidAction(n,e,i?JSON.stringify(i):"",GlobalCallbackName):console.log("不在webview运行环境","androidJs.doAndroidAction("+n+", "+e+", "+(i?JSON.stringify(i):'""')+","+GlobalCallbackName+")")}function _syncInvoke(n,e,i){return win.androidJs?win.androidJs.doAndroidAction(n,e,i?JSON.stringify(i):""):void console.log("不在webview运行环境","androidJs.doAndroidAction("+n+", "+e+", "+(i?JSON.stringify(i):'""')+")")}function getUuid(){return uuid+=1}function invoke(n,e,i){var o=getUuid();i&&(callbacks[o]=i),_invoke(o,n,e)}function syncInvoke(n,e){var i=getUuid(),o=_syncInvoke(i,n,e);return o?(o=JSON.parse(o),o.response.data):void 0}function listen(n,e,i){var o;listeners.hasOwnProperty(n)?listeners[n].cbs.push(i):(o=getUuid(),listeners[n]={id:o,cbs:[i]},_invoke(o,n,e))}function removeListen(n,e,i){if(listeners[n]){var o=listeners[n].cbs,t=-1;o.forEach(function(n,i){n===e&&(t=i)}),-1!==t&&o.splice(t,1),0===o.length&&(delete listeners[n],syncInvoke(i))}}function showNativeDialog(n,e){win.androidJs?Lib.invoke("showDialog",n,e):console.log("try to shownativedialog")}function showNativeToast(n){win.androidJs?Lib.syncInvoke("androidToast",n):console.log("try to shownativetoast")}function startLoading(n){Lib.syncInvoke("startLoading",{message:n})}function stopLoading(){Lib.syncInvoke("stopLoading")}function bindBackListener(n){win.androidJs&&Lib.listen("addBackPressListener",null,n)}function unBindBackListener(n){Lib.removeListen("addBackPressListener",n,"removeBackPressListener")}function finishPage(){Lib.syncInvoke("back")}function isLogin(){return mock.accessToken?{isLogin:!0}:Lib.syncInvoke("isLogin")}function getToken(n,e){return mock.accessToken?n(mock.accessToken):(e&&delete _.token,void(_.token?n(_.token):e||!isLogin().isLogin?(_.tokenCb=n,Lib.invoke("getTokenAsync",{invalidToken:!0},function(n){_.tokenCb(_.token=n?n.mzToken:void 0),delete _.tokenCb})):n(_.token=Lib.syncInvoke("getTokenSync",{invalidToken:!1}).mzToken)))}function getTokenFromCache(){return mock.accessToken?mock.accessToken:_.token}function getUserInfo(){return Lib.syncInvoke("getUserInfo","")}function getDeviceInfo(){return mock.imei?{i:mock.imei}:this.deviceInfo?this.deviceInfo:this.deviceInfo=Lib.syncInvoke("getDeviceInfo","")}function initAndroidEnv(n){getToken(n,!1)}function setStatusbarStyle(n){Lib.syncInvoke("setStatusbarStyle",n)}function mockLogin(n,e){window.androidJs||(mock.accessToken=n,mock.imei=e)}function clearMockLogin(){mock.accessToken=void 0,mock.accessToken=void 0}function addNetworkListener(n){win.androidJs&&Lib.listen("addNetworkListener",null,n)}function removeNetworkListener(n){Lib.removeListen("addNetworkListener",n,"removeNetworkListener")}function markCoinChanged(){Lib.syncInvoke("markCoinChanged")}var win=window,callbacks={},listeners={},GlobalCallbackName="WelFareHybridCallBack",uuid=1e6*Math.random()|0;win[GlobalCallbackName]=function(n){var e,i,o=n.actionId,t=n.response.data;if(callbacks.hasOwnProperty(o))callbacks[o]&&(callbacks[o](t),delete callbacks[o]);else for(e in listeners)if(i=listeners[e],i.id==o){var s=i.cbs[i.cbs.length-1](t);if(s===!1||s===!0)return s;return}};var Lib={isPrd:!!win.androidJs,invoke:invoke,syncInvoke:syncInvoke,listen:listen,removeListen:removeListen},win=window,_={tokenCb:null,token:null},mock={accessToken:void 0,imei:void 0},native={clearMockLogin:clearMockLogin,mockLogin:mockLogin,getToken:getToken,getTokenFromCache:getTokenFromCache,initAndroidEnv:initAndroidEnv,bindBackListener:bindBackListener,unBindBackListener:unBindBackListener,finishPage:finishPage,isLogin:isLogin,startLoading:startLoading,stopLoading:stopLoading,setStatusbarStyle:setStatusbarStyle,getDeviceInfo:getDeviceInfo,showNativeDialog:showNativeDialog,showNativeToast:showNativeToast,addNetworkListener:addNetworkListener,removeNetworkListener:removeNetworkListener,markCoinChanged:markCoinChanged};window.Native=native;